import CryptoJS from 'crypto-js';

// let vars = {};
// let encrypted = CryptoJS.AES.encrypt(
// 	JSON.stringify(vars),
// 	process.env.SERVICE_ENCRYPTION_KEY,
// ).toString();

const encrypted =
	'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';

let bytes = CryptoJS.AES.decrypt(encrypted, process.env.SERVICE_ENCRYPTION_KEY);
let decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));
// console.log(decryptedData);

export default decryptedData;
